// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickLocalization.Repository;

namespace RickLocalization.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210506210454_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14");

            modelBuilder.Entity("RickLocalization.Domain.Dimensao", b =>
                {
                    b.Property<int>("IdDimencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("NomeDimensao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Planeta")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("RickId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ViagemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDimencao");

                    b.HasIndex("RickId")
                        .IsUnique();

                    b.HasIndex("ViagemId")
                        .IsUnique();

                    b.ToTable("Dimencao");
                });

            modelBuilder.Entity("RickLocalization.Domain.Rick", b =>
                {
                    b.Property<int>("RickId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("Morty")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("RickId");

                    b.ToTable("Rick");
                });

            modelBuilder.Entity("RickLocalization.Domain.Viagem", b =>
                {
                    b.Property<int>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(15);

                    b.Property<int>("RickId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TempoViagem")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("ViagemId");

                    b.HasIndex("RickId");

                    b.ToTable("Viagem");
                });

            modelBuilder.Entity("RickLocalization.Domain.Dimensao", b =>
                {
                    b.HasOne("RickLocalization.Domain.Rick", "Rick")
                        .WithOne("Origem")
                        .HasForeignKey("RickLocalization.Domain.Dimensao", "RickId");

                    b.HasOne("RickLocalization.Domain.Viagem", "Viagem")
                        .WithOne("Dimensao")
                        .HasForeignKey("RickLocalization.Domain.Dimensao", "ViagemId");
                });

            modelBuilder.Entity("RickLocalization.Domain.Viagem", b =>
                {
                    b.HasOne("RickLocalization.Domain.Rick", "Rick")
                        .WithMany("Viagens")
                        .HasForeignKey("RickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
